"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseArray = void 0;
const withMessage_1 = require("../utils/withMessage");
const parseSchema_1 = require("./parseSchema");
const parseArray = (schema, refs) => {
  if (Array.isArray(schema.items)) {
    return `z.tuple([${schema.items.map((v, i) =>
      (0, parseSchema_1.parseSchema)(
        v,
        Object.assign(Object.assign({}, refs), {
          path: [...refs.path, "items", i],
        })
      )
    )}])`;
  }
  let r = !schema.items
    ? "z.array(z.any())"
    : `z.array(${(0, parseSchema_1.parseSchema)(
        schema.items,
        Object.assign(Object.assign({}, refs), {
          path: [...refs.path, "items"],
        })
      )})`;
  r += (0, withMessage_1.withMessage)(schema, "minItems", ({ json }) => [
    `.min(${json}`,
    ", ",
    ")",
  ]);
  r += (0, withMessage_1.withMessage)(schema, "maxItems", ({ json }) => [
    `.max(${json}`,
    ", ",
    ")",
  ]);
  return r;
};
exports.parseArray = parseArray;
