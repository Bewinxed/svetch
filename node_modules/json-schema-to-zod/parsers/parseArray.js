"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseArray = void 0;
const parseSchema_1 = require("./parseSchema");
const parseArray = (schema, refs) => {
  let r = !schema.items
    ? "z.array(z.any())"
    : Array.isArray(schema.items)
    ? `z.tuple([${schema.items.map((v, i) =>
        (0, parseSchema_1.parseSchema)(
          v,
          Object.assign(Object.assign({}, refs), {
            path: [...refs.path, "items", i],
          })
        )
      )}])`
    : `z.array(${(0, parseSchema_1.parseSchema)(
        schema.items,
        Object.assign(Object.assign({}, refs), {
          path: [...refs.path, "items"],
        })
      )})`;
  if (typeof schema.minItems === "number") r += `.min(${schema.minItems})`;
  if (typeof schema.maxItems === "number") r += `.max(${schema.maxItems})`;
  return r;
};
exports.parseArray = parseArray;
